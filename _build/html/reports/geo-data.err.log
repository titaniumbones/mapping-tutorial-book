Traceback (most recent call last):
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/matt/.conda/envs/anaconda-learning/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
joined = gpd.GeoDataFrame(countries.merge(pop, left_on="Country", right_on='Country/Territory'))
joined.head(2)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m/tmp/ipykernel_829123/1672133602.py[0m in [0;36m?[0;34m()[0m
[0;32m----> 1[0;31m [0mjoined[0m [0;34m=[0m [0mgpd[0m[0;34m.[0m[0mGeoDataFrame[0m[0;34m([0m[0mcountries[0m[0;34m.[0m[0mmerge[0m[0;34m([0m[0mpop[0m[0;34m,[0m [0mleft_on[0m[0;34m=[0m[0;34m"Country"[0m[0;34m,[0m [0mright_on[0m[0;34m=[0m[0;34m'Country/Territory'[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mjoined[0m[0;34m.[0m[0mhead[0m[0;34m([0m[0;36m2[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/geopandas/geodataframe.py[0m in [0;36m?[0;34m(self, *args, **kwargs)[0m
[1;32m   1552[0m         [0mSee[0m [0mhttps[0m[0;34m:[0m[0;34m//[0m[0mpandas[0m[0;34m.[0m[0mpydata[0m[0;34m.[0m[0morg[0m[0;34m/[0m[0mpandas[0m[0;34m-[0m[0mdocs[0m[0;34m/[0m[0mstable[0m[0;34m/[0m[0mreference[0m[0;34m/[0m[0mapi[0m[0;34m/[0m[0mpandas[0m[0;31m\[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1553[0m [0;34m.[0m[0mDataFrame[0m[0;34m.[0m[0mmerge[0m[0;34m.[0m[0mhtml[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1554[0m         [0;32mfor[0m [0mmore[0m [0mdetails[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1555[0m         """
[0;32m-> 1556[0;31m         [0mresult[0m [0;34m=[0m [0mDataFrame[0m[0;34m.[0m[0mmerge[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1557[0m         [0mgeo_col[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_geometry_column_name[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1558[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mresult[0m[0;34m,[0m [0mDataFrame[0m[0;34m)[0m [0;32mand[0m [0mgeo_col[0m [0;32min[0m [0mresult[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1559[0m             [0mresult[0m[0;34m.[0m[0m__class__[0m [0;34m=[0m [0mGeoDataFrame[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/pandas/core/frame.py[0m in [0;36m?[0;34m(self, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)[0m
[1;32m  10828[0m         [0mvalidate[0m[0;34m:[0m [0mMergeValidate[0m [0;34m|[0m [0;32mNone[0m [0;34m=[0m [0;32mNone[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m  10829[0m     ) -> DataFrame:
[1;32m  10830[0m         [0;32mfrom[0m [0mpandas[0m[0;34m.[0m[0mcore[0m[0;34m.[0m[0mreshape[0m[0;34m.[0m[0mmerge[0m [0;32mimport[0m [0mmerge[0m[0;34m[0m[0;34m[0m[0m
[1;32m  10831[0m [0;34m[0m[0m
[0;32m> 10832[0;31m         return merge(
[0m[1;32m  10833[0m             [0mself[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m  10834[0m             [0mright[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m  10835[0m             [0mhow[0m[0;34m=[0m[0mhow[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/pandas/core/reshape/merge.py[0m in [0;36m?[0;34m(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)[0m
[1;32m    166[0m             [0mvalidate[0m[0;34m=[0m[0mvalidate[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    167[0m             [0mcopy[0m[0;34m=[0m[0mcopy[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    168[0m         )
[1;32m    169[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 170[0;31m         op = _MergeOperation(
[0m[1;32m    171[0m             [0mleft_df[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    172[0m             [0mright_df[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    173[0m             [0mhow[0m[0;34m=[0m[0mhow[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/pandas/core/reshape/merge.py[0m in [0;36m?[0;34m(self, left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, indicator, validate)[0m
[1;32m    790[0m             [0mself[0m[0;34m.[0m[0mright_join_keys[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    791[0m             [0mself[0m[0;34m.[0m[0mjoin_names[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    792[0m             [0mleft_drop[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    793[0m             [0mright_drop[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 794[0;31m         ) = self._get_merge_keys()
[0m[1;32m    795[0m [0;34m[0m[0m
[1;32m    796[0m         [0;32mif[0m [0mleft_drop[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    797[0m             [0mself[0m[0;34m.[0m[0mleft[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mleft[0m[0;34m.[0m[0m_drop_labels_or_levels[0m[0;34m([0m[0mleft_drop[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/pandas/core/reshape/merge.py[0m in [0;36m?[0;34m(self)[0m
[1;32m   1306[0m                     [0;32mif[0m [0mlk[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1307[0m                         [0;31m# Then we're either Hashable or a wrong-length arraylike,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1308[0m                         [0;31m#  the latter of which will raise[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1309[0m                         [0mlk[0m [0;34m=[0m [0mcast[0m[0;34m([0m[0mHashable[0m[0;34m,[0m [0mlk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1310[0;31m                         [0mleft_keys[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mleft[0m[0;34m.[0m[0m_get_label_or_level_values[0m[0;34m([0m[0mlk[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1311[0m                         [0mjoin_names[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mlk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1312[0m                     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1313[0m                         [0;31m# work-around for merge_asof(left_index=True)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/anaconda-learning/lib/python3.11/site-packages/pandas/core/generic.py[0m in [0;36m?[0;34m(self, key, axis)[0m
[1;32m   1907[0m             [0mvalues[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mxs[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0mother_axes[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m.[0m[0m_values[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1908[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0m_is_level_reference[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0maxis[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1909[0m             [0mvalues[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0maxes[0m[0;34m[[0m[0maxis[0m[0;34m][0m[0;34m.[0m[0mget_level_values[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m.[0m[0m_values[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1910[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1911[0;31m             [0;32mraise[0m [0mKeyError[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1912[0m [0;34m[0m[0m
[1;32m   1913[0m         [0;31m# Check for duplicates[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1914[0m         [0;32mif[0m [0mvalues[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyError[0m: 'Country'

